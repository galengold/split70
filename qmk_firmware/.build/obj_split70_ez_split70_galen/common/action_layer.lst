   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_state_set_kb,"ax",@progbits
  11               		.weak	default_layer_state_set_kb
  13               	default_layer_state_set_kb:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /*
  15:./tmk_core/common/action_layer.c ****  * Default Layer State
  16:./tmk_core/common/action_layer.c ****  */
  17:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  18:./tmk_core/common/action_layer.c **** 
  19:./tmk_core/common/action_layer.c **** __attribute__((weak))
  20:./tmk_core/common/action_layer.c **** uint32_t default_layer_state_set_kb(uint32_t state) {
  16               		.loc 1 20 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               	/* epilogue start */
  21:./tmk_core/common/action_layer.c ****     return state;
  22:./tmk_core/common/action_layer.c **** }
  24               		.loc 1 22 0
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE4:
  29               		.set	default_layer_state_set_kb.localalias.0,default_layer_state_set_kb
  30               		.section	.text.default_layer_state_set,"ax",@progbits
  32               	default_layer_state_set:
  33               	.LFB5:
  23:./tmk_core/common/action_layer.c **** 
  24:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  25:./tmk_core/common/action_layer.c **** {
  34               		.loc 1 25 0
  35               		.cfi_startproc
  36               	.LVL1:
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
  26:./tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  41               		.loc 1 26 0
  42 0000 0E94 0000 		call default_layer_state_set_kb
  43               	.LVL2:
  27:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  28:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  29:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  44               		.loc 1 29 0
  45 0004 6093 0000 		sts default_layer_state,r22
  46 0008 7093 0000 		sts default_layer_state+1,r23
  47 000c 8093 0000 		sts default_layer_state+2,r24
  48 0010 9093 0000 		sts default_layer_state+3,r25
  30:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  31:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  49               		.loc 1 31 0
  50 0014 0C94 0000 		jmp clear_keyboard_but_mods
  51               	.LVL3:
  52               		.cfi_endproc
  53               	.LFE5:
  55               		.section	.text.default_layer_debug,"ax",@progbits
  56               	.global	default_layer_debug
  58               	default_layer_debug:
  59               	.LFB6:
  32:./tmk_core/common/action_layer.c **** }
  33:./tmk_core/common/action_layer.c **** 
  34:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  35:./tmk_core/common/action_layer.c **** {
  60               		.loc 1 35 0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
  66               	/* epilogue start */
  36:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  37:./tmk_core/common/action_layer.c **** }
  67               		.loc 1 37 0
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE6:
  72               		.section	.text.default_layer_set,"ax",@progbits
  73               	.global	default_layer_set
  75               	default_layer_set:
  76               	.LFB7:
  38:./tmk_core/common/action_layer.c **** 
  39:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  40:./tmk_core/common/action_layer.c **** {
  77               		.loc 1 40 0
  78               		.cfi_startproc
  79               	.LVL4:
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
  41:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  84               		.loc 1 41 0
  85 0000 0C94 0000 		jmp default_layer_state_set
  86               	.LVL5:
  87               		.cfi_endproc
  88               	.LFE7:
  90               		.section	.text.default_layer_or,"ax",@progbits
  91               	.global	default_layer_or
  93               	default_layer_or:
  94               	.LFB8:
  42:./tmk_core/common/action_layer.c **** }
  43:./tmk_core/common/action_layer.c **** 
  44:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  45:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  46:./tmk_core/common/action_layer.c **** {
  95               		.loc 1 46 0
  96               		.cfi_startproc
  97               	.LVL6:
  98 0000 0F93      		push r16
  99               	.LCFI0:
 100               		.cfi_def_cfa_offset 3
 101               		.cfi_offset 16, -2
 102 0002 1F93      		push r17
 103               	.LCFI1:
 104               		.cfi_def_cfa_offset 4
 105               		.cfi_offset 17, -3
 106               	/* prologue: function */
 107               	/* frame size = 0 */
 108               	/* stack size = 2 */
 109               	.L__stack_usage = 2
  47:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 110               		.loc 1 47 0
 111 0004 0091 0000 		lds r16,default_layer_state
 112 0008 1091 0000 		lds r17,default_layer_state+1
 113 000c 2091 0000 		lds r18,default_layer_state+2
 114 0010 3091 0000 		lds r19,default_layer_state+3
 115 0014 602B      		or r22,r16
 116               	.LVL7:
 117 0016 712B      		or r23,r17
 118 0018 822B      		or r24,r18
 119 001a 932B      		or r25,r19
 120               	/* epilogue start */
  48:./tmk_core/common/action_layer.c **** }
 121               		.loc 1 48 0
 122 001c 1F91      		pop r17
 123 001e 0F91      		pop r16
  47:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 124               		.loc 1 47 0
 125 0020 0C94 0000 		jmp default_layer_state_set
 126               	.LVL8:
 127               		.cfi_endproc
 128               	.LFE8:
 130               		.section	.text.default_layer_and,"ax",@progbits
 131               	.global	default_layer_and
 133               	default_layer_and:
 134               	.LFB9:
  49:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  50:./tmk_core/common/action_layer.c **** {
 135               		.loc 1 50 0
 136               		.cfi_startproc
 137               	.LVL9:
 138 0000 0F93      		push r16
 139               	.LCFI2:
 140               		.cfi_def_cfa_offset 3
 141               		.cfi_offset 16, -2
 142 0002 1F93      		push r17
 143               	.LCFI3:
 144               		.cfi_def_cfa_offset 4
 145               		.cfi_offset 17, -3
 146               	/* prologue: function */
 147               	/* frame size = 0 */
 148               	/* stack size = 2 */
 149               	.L__stack_usage = 2
  51:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 150               		.loc 1 51 0
 151 0004 0091 0000 		lds r16,default_layer_state
 152 0008 1091 0000 		lds r17,default_layer_state+1
 153 000c 2091 0000 		lds r18,default_layer_state+2
 154 0010 3091 0000 		lds r19,default_layer_state+3
 155 0014 6023      		and r22,r16
 156               	.LVL10:
 157 0016 7123      		and r23,r17
 158 0018 8223      		and r24,r18
 159 001a 9323      		and r25,r19
 160               	/* epilogue start */
  52:./tmk_core/common/action_layer.c **** }
 161               		.loc 1 52 0
 162 001c 1F91      		pop r17
 163 001e 0F91      		pop r16
  51:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 164               		.loc 1 51 0
 165 0020 0C94 0000 		jmp default_layer_state_set
 166               	.LVL11:
 167               		.cfi_endproc
 168               	.LFE9:
 170               		.section	.text.default_layer_xor,"ax",@progbits
 171               	.global	default_layer_xor
 173               	default_layer_xor:
 174               	.LFB10:
  53:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  54:./tmk_core/common/action_layer.c **** {
 175               		.loc 1 54 0
 176               		.cfi_startproc
 177               	.LVL12:
 178 0000 0F93      		push r16
 179               	.LCFI4:
 180               		.cfi_def_cfa_offset 3
 181               		.cfi_offset 16, -2
 182 0002 1F93      		push r17
 183               	.LCFI5:
 184               		.cfi_def_cfa_offset 4
 185               		.cfi_offset 17, -3
 186               	/* prologue: function */
 187               	/* frame size = 0 */
 188               	/* stack size = 2 */
 189               	.L__stack_usage = 2
  55:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 190               		.loc 1 55 0
 191 0004 0091 0000 		lds r16,default_layer_state
 192 0008 1091 0000 		lds r17,default_layer_state+1
 193 000c 2091 0000 		lds r18,default_layer_state+2
 194 0010 3091 0000 		lds r19,default_layer_state+3
 195 0014 6027      		eor r22,r16
 196               	.LVL13:
 197 0016 7127      		eor r23,r17
 198 0018 8227      		eor r24,r18
 199 001a 9327      		eor r25,r19
 200               	/* epilogue start */
  56:./tmk_core/common/action_layer.c **** }
 201               		.loc 1 56 0
 202 001c 1F91      		pop r17
 203 001e 0F91      		pop r16
  55:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 204               		.loc 1 55 0
 205 0020 0C94 0000 		jmp default_layer_state_set
 206               	.LVL14:
 207               		.cfi_endproc
 208               	.LFE10:
 210               		.section	.text.layer_state_set_kb,"ax",@progbits
 211               		.weak	layer_state_set_kb
 213               	layer_state_set_kb:
 214               	.LFB28:
 215               		.cfi_startproc
 216               	/* prologue: function */
 217               	/* frame size = 0 */
 218               	/* stack size = 0 */
 219               	.L__stack_usage = 0
 220 0000 0C94 0000 		jmp default_layer_state_set_kb.localalias.0
 221               		.cfi_endproc
 222               	.LFE28:
 224               		.section	.text.layer_state_set,"ax",@progbits
 226               	layer_state_set:
 227               	.LFB12:
  57:./tmk_core/common/action_layer.c **** #endif
  58:./tmk_core/common/action_layer.c **** 
  59:./tmk_core/common/action_layer.c **** 
  60:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  61:./tmk_core/common/action_layer.c **** /*
  62:./tmk_core/common/action_layer.c ****  * Keymap Layer State
  63:./tmk_core/common/action_layer.c ****  */
  64:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  65:./tmk_core/common/action_layer.c **** 
  66:./tmk_core/common/action_layer.c **** __attribute__((weak))
  67:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_kb(uint32_t state) {
  68:./tmk_core/common/action_layer.c ****     return state;
  69:./tmk_core/common/action_layer.c **** }
  70:./tmk_core/common/action_layer.c **** 
  71:./tmk_core/common/action_layer.c **** static void layer_state_set(uint32_t state)
  72:./tmk_core/common/action_layer.c **** {
 228               		.loc 1 72 0
 229               		.cfi_startproc
 230               	.LVL15:
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 0 */
 234               	.L__stack_usage = 0
  73:./tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 235               		.loc 1 73 0
 236 0000 0E94 0000 		call layer_state_set_kb
 237               	.LVL16:
  74:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
  75:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
  76:./tmk_core/common/action_layer.c ****     layer_state = state;
 238               		.loc 1 76 0
 239 0004 6093 0000 		sts layer_state,r22
 240 0008 7093 0000 		sts layer_state+1,r23
 241 000c 8093 0000 		sts layer_state+2,r24
 242 0010 9093 0000 		sts layer_state+3,r25
  77:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
  78:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 243               		.loc 1 78 0
 244 0014 0C94 0000 		jmp clear_keyboard_but_mods
 245               	.LVL17:
 246               		.cfi_endproc
 247               	.LFE12:
 249               		.section	.text.layer_clear,"ax",@progbits
 250               	.global	layer_clear
 252               	layer_clear:
 253               	.LFB13:
  79:./tmk_core/common/action_layer.c **** }
  80:./tmk_core/common/action_layer.c **** 
  81:./tmk_core/common/action_layer.c **** void layer_clear(void)
  82:./tmk_core/common/action_layer.c **** {
 254               		.loc 1 82 0
 255               		.cfi_startproc
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 0 */
 259               	.L__stack_usage = 0
  83:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 260               		.loc 1 83 0
 261 0000 60E0      		ldi r22,0
 262 0002 70E0      		ldi r23,0
 263 0004 CB01      		movw r24,r22
 264 0006 0C94 0000 		jmp layer_state_set
 265               	.LVL18:
 266               		.cfi_endproc
 267               	.LFE13:
 269               		.section	.text.layer_move,"ax",@progbits
 270               	.global	layer_move
 272               	layer_move:
 273               	.LFB14:
  84:./tmk_core/common/action_layer.c **** }
  85:./tmk_core/common/action_layer.c **** 
  86:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
  87:./tmk_core/common/action_layer.c **** {
 274               		.loc 1 87 0
 275               		.cfi_startproc
 276               	.LVL19:
 277 0000 0F93      		push r16
 278               	.LCFI6:
 279               		.cfi_def_cfa_offset 3
 280               		.cfi_offset 16, -2
 281 0002 1F93      		push r17
 282               	.LCFI7:
 283               		.cfi_def_cfa_offset 4
 284               		.cfi_offset 17, -3
 285               	/* prologue: function */
 286               	/* frame size = 0 */
 287               	/* stack size = 2 */
 288               	.L__stack_usage = 2
  88:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 289               		.loc 1 88 0
 290 0004 41E0      		ldi r20,lo8(1)
 291 0006 50E0      		ldi r21,0
 292 0008 60E0      		ldi r22,0
 293 000a 70E0      		ldi r23,0
 294 000c 8A01      		movw r16,r20
 295 000e 9B01      		movw r18,r22
 296 0010 00C0      		rjmp 2f
 297               		1:
 298 0012 000F      		lsl r16
 299 0014 111F      		rol r17
 300 0016 221F      		rol r18
 301 0018 331F      		rol r19
 302               		2:
 303 001a 8A95      		dec r24
 304 001c 02F4      		brpl 1b
 305 001e C901      		movw r24,r18
 306               	.LVL20:
 307 0020 B801      		movw r22,r16
 308               	/* epilogue start */
  89:./tmk_core/common/action_layer.c **** }
 309               		.loc 1 89 0
 310 0022 1F91      		pop r17
 311 0024 0F91      		pop r16
  88:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 312               		.loc 1 88 0
 313 0026 0C94 0000 		jmp layer_state_set
 314               	.LVL21:
 315               		.cfi_endproc
 316               	.LFE14:
 318               		.section	.text.layer_on,"ax",@progbits
 319               	.global	layer_on
 321               	layer_on:
 322               	.LFB15:
  90:./tmk_core/common/action_layer.c **** 
  91:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
  92:./tmk_core/common/action_layer.c **** {
 323               		.loc 1 92 0
 324               		.cfi_startproc
 325               	.LVL22:
 326 0000 0F93      		push r16
 327               	.LCFI8:
 328               		.cfi_def_cfa_offset 3
 329               		.cfi_offset 16, -2
 330 0002 1F93      		push r17
 331               	.LCFI9:
 332               		.cfi_def_cfa_offset 4
 333               		.cfi_offset 17, -3
 334               	/* prologue: function */
 335               	/* frame size = 0 */
 336               	/* stack size = 2 */
 337               	.L__stack_usage = 2
  93:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 338               		.loc 1 93 0
 339 0004 41E0      		ldi r20,lo8(1)
 340 0006 50E0      		ldi r21,0
 341 0008 60E0      		ldi r22,0
 342 000a 70E0      		ldi r23,0
 343 000c 00C0      		rjmp 2f
 344               		1:
 345 000e 440F      		lsl r20
 346 0010 551F      		rol r21
 347 0012 661F      		rol r22
 348 0014 771F      		rol r23
 349               		2:
 350 0016 8A95      		dec r24
 351 0018 02F4      		brpl 1b
 352 001a 8091 0000 		lds r24,layer_state
 353 001e 9091 0000 		lds r25,layer_state+1
 354 0022 A091 0000 		lds r26,layer_state+2
 355 0026 B091 0000 		lds r27,layer_state+3
 356               	.LVL23:
 357 002a 8A01      		movw r16,r20
 358 002c 9B01      		movw r18,r22
 359 002e 082B      		or r16,r24
 360 0030 192B      		or r17,r25
 361 0032 2A2B      		or r18,r26
 362 0034 3B2B      		or r19,r27
 363 0036 C901      		movw r24,r18
 364 0038 B801      		movw r22,r16
 365               	/* epilogue start */
  94:./tmk_core/common/action_layer.c **** }
 366               		.loc 1 94 0
 367 003a 1F91      		pop r17
 368 003c 0F91      		pop r16
  93:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 369               		.loc 1 93 0
 370 003e 0C94 0000 		jmp layer_state_set
 371               	.LVL24:
 372               		.cfi_endproc
 373               	.LFE15:
 375               		.section	.text.layer_off,"ax",@progbits
 376               	.global	layer_off
 378               	layer_off:
 379               	.LFB16:
  95:./tmk_core/common/action_layer.c **** 
  96:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
  97:./tmk_core/common/action_layer.c **** {
 380               		.loc 1 97 0
 381               		.cfi_startproc
 382               	.LVL25:
 383 0000 0F93      		push r16
 384               	.LCFI10:
 385               		.cfi_def_cfa_offset 3
 386               		.cfi_offset 16, -2
 387 0002 1F93      		push r17
 388               	.LCFI11:
 389               		.cfi_def_cfa_offset 4
 390               		.cfi_offset 17, -3
 391               	/* prologue: function */
 392               	/* frame size = 0 */
 393               	/* stack size = 2 */
 394               	.L__stack_usage = 2
  98:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 395               		.loc 1 98 0
 396 0004 41E0      		ldi r20,lo8(1)
 397 0006 50E0      		ldi r21,0
 398 0008 60E0      		ldi r22,0
 399 000a 70E0      		ldi r23,0
 400 000c 00C0      		rjmp 2f
 401               		1:
 402 000e 440F      		lsl r20
 403 0010 551F      		rol r21
 404 0012 661F      		rol r22
 405 0014 771F      		rol r23
 406               		2:
 407 0016 8A95      		dec r24
 408 0018 02F4      		brpl 1b
 409 001a CB01      		movw r24,r22
 410               	.LVL26:
 411 001c BA01      		movw r22,r20
 412 001e 6095      		com r22
 413 0020 7095      		com r23
 414 0022 8095      		com r24
 415 0024 9095      		com r25
 416 0026 0091 0000 		lds r16,layer_state
 417 002a 1091 0000 		lds r17,layer_state+1
 418 002e 2091 0000 		lds r18,layer_state+2
 419 0032 3091 0000 		lds r19,layer_state+3
 420 0036 6023      		and r22,r16
 421 0038 7123      		and r23,r17
 422 003a 8223      		and r24,r18
 423 003c 9323      		and r25,r19
 424               	/* epilogue start */
  99:./tmk_core/common/action_layer.c **** }
 425               		.loc 1 99 0
 426 003e 1F91      		pop r17
 427 0040 0F91      		pop r16
  98:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 428               		.loc 1 98 0
 429 0042 0C94 0000 		jmp layer_state_set
 430               	.LVL27:
 431               		.cfi_endproc
 432               	.LFE16:
 434               		.section	.text.layer_invert,"ax",@progbits
 435               	.global	layer_invert
 437               	layer_invert:
 438               	.LFB17:
 100:./tmk_core/common/action_layer.c **** 
 101:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
 102:./tmk_core/common/action_layer.c **** {
 439               		.loc 1 102 0
 440               		.cfi_startproc
 441               	.LVL28:
 442 0000 0F93      		push r16
 443               	.LCFI12:
 444               		.cfi_def_cfa_offset 3
 445               		.cfi_offset 16, -2
 446 0002 1F93      		push r17
 447               	.LCFI13:
 448               		.cfi_def_cfa_offset 4
 449               		.cfi_offset 17, -3
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 2 */
 453               	.L__stack_usage = 2
 103:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 454               		.loc 1 103 0
 455 0004 41E0      		ldi r20,lo8(1)
 456 0006 50E0      		ldi r21,0
 457 0008 60E0      		ldi r22,0
 458 000a 70E0      		ldi r23,0
 459 000c 00C0      		rjmp 2f
 460               		1:
 461 000e 440F      		lsl r20
 462 0010 551F      		rol r21
 463 0012 661F      		rol r22
 464 0014 771F      		rol r23
 465               		2:
 466 0016 8A95      		dec r24
 467 0018 02F4      		brpl 1b
 468 001a 8091 0000 		lds r24,layer_state
 469 001e 9091 0000 		lds r25,layer_state+1
 470 0022 A091 0000 		lds r26,layer_state+2
 471 0026 B091 0000 		lds r27,layer_state+3
 472               	.LVL29:
 473 002a 8A01      		movw r16,r20
 474 002c 9B01      		movw r18,r22
 475 002e 0827      		eor r16,r24
 476 0030 1927      		eor r17,r25
 477 0032 2A27      		eor r18,r26
 478 0034 3B27      		eor r19,r27
 479 0036 C901      		movw r24,r18
 480 0038 B801      		movw r22,r16
 481               	/* epilogue start */
 104:./tmk_core/common/action_layer.c **** }
 482               		.loc 1 104 0
 483 003a 1F91      		pop r17
 484 003c 0F91      		pop r16
 103:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 485               		.loc 1 103 0
 486 003e 0C94 0000 		jmp layer_state_set
 487               	.LVL30:
 488               		.cfi_endproc
 489               	.LFE17:
 491               		.section	.text.layer_or,"ax",@progbits
 492               	.global	layer_or
 494               	layer_or:
 495               	.LFB18:
 105:./tmk_core/common/action_layer.c **** 
 106:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
 107:./tmk_core/common/action_layer.c **** {
 496               		.loc 1 107 0
 497               		.cfi_startproc
 498               	.LVL31:
 499 0000 0F93      		push r16
 500               	.LCFI14:
 501               		.cfi_def_cfa_offset 3
 502               		.cfi_offset 16, -2
 503 0002 1F93      		push r17
 504               	.LCFI15:
 505               		.cfi_def_cfa_offset 4
 506               		.cfi_offset 17, -3
 507               	/* prologue: function */
 508               	/* frame size = 0 */
 509               	/* stack size = 2 */
 510               	.L__stack_usage = 2
 108:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 511               		.loc 1 108 0
 512 0004 0091 0000 		lds r16,layer_state
 513 0008 1091 0000 		lds r17,layer_state+1
 514 000c 2091 0000 		lds r18,layer_state+2
 515 0010 3091 0000 		lds r19,layer_state+3
 516 0014 602B      		or r22,r16
 517               	.LVL32:
 518 0016 712B      		or r23,r17
 519 0018 822B      		or r24,r18
 520 001a 932B      		or r25,r19
 521               	/* epilogue start */
 109:./tmk_core/common/action_layer.c **** }
 522               		.loc 1 109 0
 523 001c 1F91      		pop r17
 524 001e 0F91      		pop r16
 108:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 525               		.loc 1 108 0
 526 0020 0C94 0000 		jmp layer_state_set
 527               	.LVL33:
 528               		.cfi_endproc
 529               	.LFE18:
 531               		.section	.text.layer_and,"ax",@progbits
 532               	.global	layer_and
 534               	layer_and:
 535               	.LFB19:
 110:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
 111:./tmk_core/common/action_layer.c **** {
 536               		.loc 1 111 0
 537               		.cfi_startproc
 538               	.LVL34:
 539 0000 0F93      		push r16
 540               	.LCFI16:
 541               		.cfi_def_cfa_offset 3
 542               		.cfi_offset 16, -2
 543 0002 1F93      		push r17
 544               	.LCFI17:
 545               		.cfi_def_cfa_offset 4
 546               		.cfi_offset 17, -3
 547               	/* prologue: function */
 548               	/* frame size = 0 */
 549               	/* stack size = 2 */
 550               	.L__stack_usage = 2
 112:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 551               		.loc 1 112 0
 552 0004 0091 0000 		lds r16,layer_state
 553 0008 1091 0000 		lds r17,layer_state+1
 554 000c 2091 0000 		lds r18,layer_state+2
 555 0010 3091 0000 		lds r19,layer_state+3
 556 0014 6023      		and r22,r16
 557               	.LVL35:
 558 0016 7123      		and r23,r17
 559 0018 8223      		and r24,r18
 560 001a 9323      		and r25,r19
 561               	/* epilogue start */
 113:./tmk_core/common/action_layer.c **** }
 562               		.loc 1 113 0
 563 001c 1F91      		pop r17
 564 001e 0F91      		pop r16
 112:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 565               		.loc 1 112 0
 566 0020 0C94 0000 		jmp layer_state_set
 567               	.LVL36:
 568               		.cfi_endproc
 569               	.LFE19:
 571               		.section	.text.layer_xor,"ax",@progbits
 572               	.global	layer_xor
 574               	layer_xor:
 575               	.LFB20:
 114:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 115:./tmk_core/common/action_layer.c **** {
 576               		.loc 1 115 0
 577               		.cfi_startproc
 578               	.LVL37:
 579 0000 0F93      		push r16
 580               	.LCFI18:
 581               		.cfi_def_cfa_offset 3
 582               		.cfi_offset 16, -2
 583 0002 1F93      		push r17
 584               	.LCFI19:
 585               		.cfi_def_cfa_offset 4
 586               		.cfi_offset 17, -3
 587               	/* prologue: function */
 588               	/* frame size = 0 */
 589               	/* stack size = 2 */
 590               	.L__stack_usage = 2
 116:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 591               		.loc 1 116 0
 592 0004 0091 0000 		lds r16,layer_state
 593 0008 1091 0000 		lds r17,layer_state+1
 594 000c 2091 0000 		lds r18,layer_state+2
 595 0010 3091 0000 		lds r19,layer_state+3
 596 0014 6027      		eor r22,r16
 597               	.LVL38:
 598 0016 7127      		eor r23,r17
 599 0018 8227      		eor r24,r18
 600 001a 9327      		eor r25,r19
 601               	/* epilogue start */
 117:./tmk_core/common/action_layer.c **** }
 602               		.loc 1 117 0
 603 001c 1F91      		pop r17
 604 001e 0F91      		pop r16
 116:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 605               		.loc 1 116 0
 606 0020 0C94 0000 		jmp layer_state_set
 607               	.LVL39:
 608               		.cfi_endproc
 609               	.LFE20:
 611               		.section	.text.layer_debug,"ax",@progbits
 612               	.global	layer_debug
 614               	layer_debug:
 615               	.LFB26:
 616               		.cfi_startproc
 617               	/* prologue: function */
 618               	/* frame size = 0 */
 619               	/* stack size = 0 */
 620               	.L__stack_usage = 0
 621               	/* epilogue start */
 622 0000 0895      		ret
 623               		.cfi_endproc
 624               	.LFE26:
 626               		.section	.text.layer_switch_get_layer,"ax",@progbits
 627               	.global	layer_switch_get_layer
 629               	layer_switch_get_layer:
 630               	.LFB23:
 118:./tmk_core/common/action_layer.c **** 
 119:./tmk_core/common/action_layer.c **** void layer_debug(void)
 120:./tmk_core/common/action_layer.c **** {
 121:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 122:./tmk_core/common/action_layer.c **** }
 123:./tmk_core/common/action_layer.c **** #endif
 124:./tmk_core/common/action_layer.c **** 
 125:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 126:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 127:./tmk_core/common/action_layer.c **** 
 128:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 129:./tmk_core/common/action_layer.c **** {
 130:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 131:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 132:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 133:./tmk_core/common/action_layer.c **** 
 134:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 135:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 136:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 137:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 138:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 139:./tmk_core/common/action_layer.c ****     }
 140:./tmk_core/common/action_layer.c **** }
 141:./tmk_core/common/action_layer.c **** 
 142:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 143:./tmk_core/common/action_layer.c **** {
 144:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 145:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 146:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 147:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 148:./tmk_core/common/action_layer.c **** 
 149:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 150:./tmk_core/common/action_layer.c ****         layer |=
 151:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 152:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 153:./tmk_core/common/action_layer.c ****             << bit_number;
 154:./tmk_core/common/action_layer.c ****     }
 155:./tmk_core/common/action_layer.c **** 
 156:./tmk_core/common/action_layer.c ****     return layer;
 157:./tmk_core/common/action_layer.c **** }
 158:./tmk_core/common/action_layer.c **** #endif
 159:./tmk_core/common/action_layer.c **** 
 160:./tmk_core/common/action_layer.c **** /*
 161:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 162:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 163:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 164:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 165:./tmk_core/common/action_layer.c ****  */
 166:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 167:./tmk_core/common/action_layer.c **** {
 168:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 169:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 170:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 171:./tmk_core/common/action_layer.c ****     }
 172:./tmk_core/common/action_layer.c **** 
 173:./tmk_core/common/action_layer.c ****     uint8_t layer;
 174:./tmk_core/common/action_layer.c **** 
 175:./tmk_core/common/action_layer.c ****     if (pressed) {
 176:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 177:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 178:./tmk_core/common/action_layer.c ****     }
 179:./tmk_core/common/action_layer.c ****     else {
 180:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 181:./tmk_core/common/action_layer.c ****     }
 182:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 183:./tmk_core/common/action_layer.c **** #else
 184:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 185:./tmk_core/common/action_layer.c **** #endif
 186:./tmk_core/common/action_layer.c **** }
 187:./tmk_core/common/action_layer.c **** 
 188:./tmk_core/common/action_layer.c **** 
 189:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 190:./tmk_core/common/action_layer.c **** {
 631               		.loc 1 190 0
 632               		.cfi_startproc
 633               	.LVL40:
 634               		.loc 1 190 0
 635 0000 BF92      		push r11
 636               	.LCFI20:
 637               		.cfi_def_cfa_offset 3
 638               		.cfi_offset 11, -2
 639 0002 CF92      		push r12
 640               	.LCFI21:
 641               		.cfi_def_cfa_offset 4
 642               		.cfi_offset 12, -3
 643 0004 DF92      		push r13
 644               	.LCFI22:
 645               		.cfi_def_cfa_offset 5
 646               		.cfi_offset 13, -4
 647 0006 EF92      		push r14
 648               	.LCFI23:
 649               		.cfi_def_cfa_offset 6
 650               		.cfi_offset 14, -5
 651 0008 FF92      		push r15
 652               	.LCFI24:
 653               		.cfi_def_cfa_offset 7
 654               		.cfi_offset 15, -6
 655 000a 0F93      		push r16
 656               	.LCFI25:
 657               		.cfi_def_cfa_offset 8
 658               		.cfi_offset 16, -7
 659 000c 1F93      		push r17
 660               	.LCFI26:
 661               		.cfi_def_cfa_offset 9
 662               		.cfi_offset 17, -8
 663 000e CF93      		push r28
 664               	.LCFI27:
 665               		.cfi_def_cfa_offset 10
 666               		.cfi_offset 28, -9
 667 0010 DF93      		push r29
 668               	.LCFI28:
 669               		.cfi_def_cfa_offset 11
 670               		.cfi_offset 29, -10
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 9 */
 674               	.L__stack_usage = 9
 675 0012 8C01      		movw r16,r24
 676               	.LVL41:
 191:./tmk_core/common/action_layer.c ****     action_t action;
 192:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 193:./tmk_core/common/action_layer.c **** 
 194:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 195:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 677               		.loc 1 195 0
 678 0014 C090 0000 		lds r12,layer_state
 679 0018 D090 0000 		lds r13,layer_state+1
 680 001c E090 0000 		lds r14,layer_state+2
 681 0020 F090 0000 		lds r15,layer_state+3
 682 0024 8091 0000 		lds r24,default_layer_state
 683 0028 9091 0000 		lds r25,default_layer_state+1
 684 002c A091 0000 		lds r26,default_layer_state+2
 685 0030 B091 0000 		lds r27,default_layer_state+3
 686               	.LVL42:
 687 0034 C82A      		or r12,r24
 688 0036 D92A      		or r13,r25
 689 0038 EA2A      		or r14,r26
 690 003a FB2A      		or r15,r27
 691               	.LVL43:
 692 003c CFE1      		ldi r28,lo8(31)
 693 003e D0E0      		ldi r29,0
 694               	.LVL44:
 695               	.L21:
 696 0040 BC2E      		mov r11,r28
 697               	.LVL45:
 698               	.LBB2:
 196:./tmk_core/common/action_layer.c ****     /* check top layer first */
 197:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 198:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 699               		.loc 1 198 0
 700 0042 D701      		movw r26,r14
 701 0044 C601      		movw r24,r12
 702 0046 0C2E      		mov r0,r28
 703 0048 00C0      		rjmp 2f
 704               		1:
 705 004a B695      		lsr r27
 706 004c A795      		ror r26
 707 004e 9795      		ror r25
 708 0050 8795      		ror r24
 709               		2:
 710 0052 0A94      		dec r0
 711 0054 02F4      		brpl 1b
 712 0056 80FD      		sbrc r24,0
 713 0058 00C0      		rjmp .L20
 714               	.L23:
 715               	.LVL46:
 716               	.LVL47:
 717 005a 2197      		sbiw r28,1
 718 005c 00F4      		brcc .L21
 719               	.LBE2:
 199:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 200:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 201:./tmk_core/common/action_layer.c ****                 return i;
 202:./tmk_core/common/action_layer.c ****             }
 203:./tmk_core/common/action_layer.c ****         }
 204:./tmk_core/common/action_layer.c ****     }
 205:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 206:./tmk_core/common/action_layer.c ****     return 0;
 720               		.loc 1 206 0
 721 005e B12C      		mov r11,__zero_reg__
 722               	.LVL48:
 723               	.L19:
 207:./tmk_core/common/action_layer.c **** #else
 208:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 209:./tmk_core/common/action_layer.c **** #endif
 210:./tmk_core/common/action_layer.c **** }
 724               		.loc 1 210 0
 725 0060 8B2D      		mov r24,r11
 726               	/* epilogue start */
 727 0062 DF91      		pop r29
 728 0064 CF91      		pop r28
 729 0066 1F91      		pop r17
 730 0068 0F91      		pop r16
 731               	.LVL49:
 732 006a FF90      		pop r15
 733 006c EF90      		pop r14
 734 006e DF90      		pop r13
 735 0070 CF90      		pop r12
 736               	.LVL50:
 737 0072 BF90      		pop r11
 738 0074 0895      		ret
 739               	.LVL51:
 740               	.L20:
 741               	.LBB3:
 199:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 742               		.loc 1 199 0
 743 0076 B801      		movw r22,r16
 744 0078 8C2F      		mov r24,r28
 745 007a 0E94 0000 		call action_for_key
 746               	.LVL52:
 200:./tmk_core/common/action_layer.c ****                 return i;
 747               		.loc 1 200 0
 748 007e 0197      		sbiw r24,1
 749 0080 01F0      		breq .L23
 750 0082 00C0      		rjmp .L19
 751               	.LBE3:
 752               		.cfi_endproc
 753               	.LFE23:
 755               		.section	.text.layer_switch_get_action,"ax",@progbits
 756               	.global	layer_switch_get_action
 758               	layer_switch_get_action:
 759               	.LFB24:
 211:./tmk_core/common/action_layer.c **** 
 212:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 213:./tmk_core/common/action_layer.c **** {
 760               		.loc 1 213 0
 761               		.cfi_startproc
 762               	.LVL53:
 763 0000 CF93      		push r28
 764               	.LCFI29:
 765               		.cfi_def_cfa_offset 3
 766               		.cfi_offset 28, -2
 767 0002 DF93      		push r29
 768               	.LCFI30:
 769               		.cfi_def_cfa_offset 4
 770               		.cfi_offset 29, -3
 771               	/* prologue: function */
 772               	/* frame size = 0 */
 773               	/* stack size = 2 */
 774               	.L__stack_usage = 2
 775 0004 EC01      		movw r28,r24
 214:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 776               		.loc 1 214 0
 777 0006 0E94 0000 		call layer_switch_get_layer
 778               	.LVL54:
 779 000a BE01      		movw r22,r28
 780               	/* epilogue start */
 215:./tmk_core/common/action_layer.c **** }
 781               		.loc 1 215 0
 782 000c DF91      		pop r29
 783 000e CF91      		pop r28
 784               	.LVL55:
 214:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 785               		.loc 1 214 0
 786 0010 0C94 0000 		jmp action_for_key
 787               	.LVL56:
 788               		.cfi_endproc
 789               	.LFE24:
 791               		.section	.text.store_or_get_action,"ax",@progbits
 792               	.global	store_or_get_action
 794               	store_or_get_action:
 795               	.LFB22:
 167:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 796               		.loc 1 167 0
 797               		.cfi_startproc
 798               	.LVL57:
 799               	/* prologue: function */
 800               	/* frame size = 0 */
 801               	/* stack size = 0 */
 802               	.L__stack_usage = 0
 803 0000 CB01      		movw r24,r22
 804               	.LVL58:
 184:./tmk_core/common/action_layer.c **** #endif
 805               		.loc 1 184 0
 806 0002 0C94 0000 		jmp layer_switch_get_action
 807               	.LVL59:
 808               		.cfi_endproc
 809               	.LFE22:
 811               	.global	layer_state
 812               		.section	.bss.layer_state,"aw",@nobits
 815               	layer_state:
 816 0000 0000 0000 		.zero	4
 817               	.global	default_layer_state
 818               		.section	.bss.default_layer_state,"aw",@nobits
 821               	default_layer_state:
 822 0000 0000 0000 		.zero	4
 823               		.text
 824               	.Letext0:
 825               		.file 2 "/usr/avr/include/stdint.h"
 826               		.file 3 "./tmk_core/common/keyboard.h"
 827               		.file 4 "./tmk_core/common/action_code.h"
 828               		.file 5 "./tmk_core/common/action_layer.h"
 829               		.file 6 "./tmk_core/common/debug.h"
 830               		.file 7 "./tmk_core/common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/ccXwnsFx.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXwnsFx.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXwnsFx.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXwnsFx.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXwnsFx.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXwnsFx.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb
     /tmp/ccXwnsFx.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb.localalias.0
     /tmp/ccXwnsFx.s:32     .text.default_layer_state_set:0000000000000000 default_layer_state_set
     /tmp/ccXwnsFx.s:821    .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/ccXwnsFx.s:58     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/ccXwnsFx.s:75     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/ccXwnsFx.s:93     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/ccXwnsFx.s:133    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/ccXwnsFx.s:173    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/ccXwnsFx.s:213    .text.layer_state_set_kb:0000000000000000 layer_state_set_kb
     /tmp/ccXwnsFx.s:226    .text.layer_state_set:0000000000000000 layer_state_set
     /tmp/ccXwnsFx.s:815    .bss.layer_state:0000000000000000 layer_state
     /tmp/ccXwnsFx.s:252    .text.layer_clear:0000000000000000 layer_clear
     /tmp/ccXwnsFx.s:272    .text.layer_move:0000000000000000 layer_move
     /tmp/ccXwnsFx.s:321    .text.layer_on:0000000000000000 layer_on
     /tmp/ccXwnsFx.s:378    .text.layer_off:0000000000000000 layer_off
     /tmp/ccXwnsFx.s:437    .text.layer_invert:0000000000000000 layer_invert
     /tmp/ccXwnsFx.s:494    .text.layer_or:0000000000000000 layer_or
     /tmp/ccXwnsFx.s:534    .text.layer_and:0000000000000000 layer_and
     /tmp/ccXwnsFx.s:574    .text.layer_xor:0000000000000000 layer_xor
     /tmp/ccXwnsFx.s:614    .text.layer_debug:0000000000000000 layer_debug
     /tmp/ccXwnsFx.s:629    .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/ccXwnsFx.s:758    .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/ccXwnsFx.s:794    .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
__do_clear_bss
